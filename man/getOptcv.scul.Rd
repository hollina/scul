% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/getOptcv.scul.R
\name{getOptcv.scul}
\alias{getOptcv.scul}
\title{Extract cross-validated \code{lamdas}}
\usage{
getOptcv.scul(lambdapath, mse, se, fullMSE)
}
\arguments{
\item{lambdapath}{A grid of lambdas that is used in each cross-validation run as potential options for the optimal penalty parameter.}

\item{mse}{A vector of the average mean squared error (average across cross-validation runs) for each given \code{lambda} in the \code{lambdapath} grid.}

\item{se}{A vector of the standard error associated with each average mean squared error (average across cross-validation runs) for each given \code{lambda} in the \code{lambdapath} grid.}

\item{fullMSE}{A matrix of the mean squared error for each cross-validation run and each given \code{lambda} in the \code{lambdapath} grid.}
}
\description{
This is a simple adaptation of the \code{getOptcv.glmnet} function from  \code{glmnet}.
The code takes a grid of \code{lambda} penalties along with a vector of associated mean squared errors (\code{mse}), standard errors (\code{se}), and the mean squared error from each cross-validation run (\code{fullMSE}).
From this three potential options for the cross-validated penalty parameter are computed. 1) The \code{lambda} that has the minimum average mean squared error across all the cross-validation runs (\code{lambda$lambda.min}),
2) The \code{lambda} the largest \code{lambda} that is associated with an average cross-validated mean squared error within one standard error of the minimum average cross-validated mean squared error (\code{lambda$lambda.1se}), and
3) the \code{lamda} that is the median of the set of \code{lambdas} (\code{lambda$lambda.median}).
}
